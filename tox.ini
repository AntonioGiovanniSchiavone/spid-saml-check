[tox]
envlist =
    cleanup,
    sp-metadata-strict,
    sp-metadata-certs,
    sp-metadata-extra,
    sp-authn-request-strict,
skipsdist = True

[testenv]
basepython = python3
whitelist_externals =
    bash
    curl
    find
    openssl
    rm
    xargs
    xmllint
    xmlsec1

[testenv:cleanup]
passenv =
    DATA_DIR
commands =
    find {env:DATA_DIR} -type f -name *.pem -delete
    find {env:DATA_DIR} -type f -name *.b64.txt -delete

[testenv:sp-metadata-strict]
deps = -rrequirements.txt
passenv =
    METADATA
    DATA_DIR
commands =
    #
    # verify the XSD schema
    #
    xmllint \
        --noout \
        --schema ./xsd/saml-schema-metadata-2.0.xsd \
        {env:METADATA}
    #
    # verify the XML signature
    #
    xmlsec1 \
        --verify --insecure \
        --id-attr:ID urn:oasis:names:tc:SAML:2.0:metadata:EntityDescriptor \
        {env:METADATA}
    #
    # verify SPID specifications
    #
    python -m unittest --verbose test/sp/metadata.py

[testenv:sp-metadata-certs]
passenv =
    DATA_DIR
commands =
    bash -c "find {env:DATA_DIR} -type f -name *.signature.pem | xargs -n1 bash ./script/check-certificate.sh"
    bash -c "find {env:DATA_DIR} -type f -name *.signing.pem | xargs -n1 bash ./script/check-certificate.sh"
    bash -c "test `ls -1 {env:DATA_DIR} | grep -c encryption.pem` -gt 0 && find {env:DATA_DIR} -type f -name *.encryption.pem | xargs -n1 bash ./script/check-certificate.sh || exit 0"

[testenv:sp-metadata-extra]
deps = -rrequirements.txt
passenv =
    DATA_DIR
    METADATA
    SSLLABS_SKIP
commands =
    python -m unittest --verbose test/sp/metadata_extra.py

[testenv:sp-authn-request-strict]
deps = -rrequirements.txt
passenv =
    DATA_DIR
    METADATA
    REQUEST
commands =
    python ./script/parse-authn-request.py
    bash ./script/check-authn-request-xsd-and-signature.sh
    python -m unittest --verbose test/sp/authn_request.py
